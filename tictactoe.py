from flask import Flask
from flask import jsonify
from flask import request
from app.models import db, Game, Move

app = Flask(__name__)
# We're using sqlite so we dont need to worry about deploying a complete DB 
app.config["SQLALCHEMY_DATABASE_URI"] = "sqlite:///project.db"
db.init_app(app)

with app.app_context():
    db.create_all()
    

@app.route("/")
def hello_world():
    return "<p>Tic Tac Toe Inicializado</p>"

@app.get("/api/game")
def game_get_all(): 
    response = {'message': getAllGames()}
    return jsonify(response)

@app.post("/api/game")
def game_post():
    response = {'message': createGame()}
    return jsonify(response)

@app.get("/api/game/<game_id>")
def game_get(game_id):
    response = {'message': getGame(game_id)}
    return jsonify(response)

@app.post("/api/game/<game_id>/move")
def game_move_post(game_id):
    ##return makeMove(game_id, request.form['x'], request.form['y'])
    response = {'message': 'Moving '+request.form['x']+request.form['y']}
    return jsonify(response)

def  getAllGames():
    return 'All Games. pending DB'

def createGame():
    return 'Creating new Game. pending DB'

def getGame(game_id):
    return 'Game'+ game_id + '. pending DB'
    ## getGameFromDB(game_id)


def makeMove(game_id, x, y):
    ## pseudocode Generated by Copilot. To be improved.
    if  x > 3 or y > 3 or x < 0 or y < 0:
        return "Invalid position", 400
    game = getGameFromDB(game_id)
    if game is None:
        return "Game not found", 404
    if game['status'] == 'finished':
        return "Game already finished", 400
    if game['board'][int(x)][int(y)] != '-':
        return "Position already taken", 400
    game['board'][int(x)][int(y)] = 'X'
    ## check Victory
    if haveVictory(game):
        game['status'] = 'finished'
        game['winner'] = 'Player'
        return 
    ## Computer moves
    saveGame(game)
    return game

def getGameFromDB(game_id):
    return {
        'id': game_id,
        'board': [
            ['-', '-', '-'],
            ['-', '-', '-'],
            ['-', '-', '-']
        ],
        'current_player': 'X',
        'status': 'ongoing'
    }

def saveGame(game):
    pass